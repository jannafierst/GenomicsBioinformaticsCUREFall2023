**HPCC Orientation**

We will be logging onto the HPCC and doing some preliminary navigation. You will use your panther credentials (username and password) to connect.


Login at the FIU Panther cluster Web portal from a browser: https://hpcgui.fiu.edu
Note: Mozilla Firefox has not been working for me lately and I have to connect via Safari.

Once you are on, go to the top where it says 'Clusters' and select 'Panther Shell Access.' It will open a terminal and ask you for your panther credentials again.

Congratulations! You are officially on the server.

Once you are set up it’s time to learn a little about how to operate on the HPCC. First, note that the terminal looks just like the terminal you used on sandbox.bio. This means that the Unix commands you have used can be used on the HPCC but it also means that you can’t rely on old standbys like Microsoft Word or Excel. Type

    $ ls

and 

    $ pwd

to figure out where you are. We talked a little last time about how “.” is a location reference that indicates our current working directory. Similarly, “..” is a location reference that indicates one directory up. We can use this location reference to move out of our current directory and into an different directory. The command to change directory is ‘cd’ short for… change directory. Type

    $ cd ./

Now type 

    $ pwd

and 

    $ ls

What happens? You should be in the same place because you instructed the computer to cd to your current location. Now type

    $ cd ../

to go up one directory. Type

    $ pwd

and

    $ ls

Where are you now? What else is in this directory?

Go up another level

    $ cd ../

and type 

    $ ls

Where are you now? Try to look around a little bit (don’t worry, you can’t get anywhere you’re not supposed to be).

Now navigate back to your home directory like this:

    $ cd ~

To see which programs are available type

    $ module avail

It will pop out a list of all the software available to use on the HPCC. To scroll through the list type 'return' or hit your space bar, type 'q' to quit and go back to your prompt.


In order to use a program we type 

    $ module load ‘softwarenamehere’

For example, scroll through the list and find the minimap module (minimap is alignment software we will use to align our DNA sequence reads to a reference genome sequence).

    $ module load minimap

What happens?

The HPCC is very precise and we need to put the whole name of the module in because sometimes there are different versions of the same software. Type
    
    $ module load minimap2-2.24

This loads the minimap2 software and any packages or software it might need to run into your environment. Specifically, it adds the software location to your path.

To see the software in your path type

    $ module list

And to remove software from your path type (for example)

    $ module unload minimap2-2.24

Now type 

    $ module list

again. What happens? 



In order to create files we need to use a text editor on the HPCC. My favorite is vim. It has a lot of functionality but we will use it in the most simple way to create our scripts. Type

    $ vi myfile.txt
    
Your window should now have a lot of blue tildes in a single column. You are inside your file and you can edit it. Type 'i' for 'insertion mode' and you should see 

    --INSERT--

 at the bottom of your screen. We will now write our first script, a truly momentous day! Our script will start with a header or 'shebang' line that declares our desired shell, bash. We will then write our first program!
 
    #!/bin/bash
    
    echo "Hello World!"
 
In order to run our script we need to save our file and exit vi. We do this by hitting the escape key to move from insertion mode to command mode, typing the save command and typing the exit or quit command. Type

    <escape>
    :wq
  
You should now be back at the prompt. In order to make our script executable we type

    $ chmod +x myfile.txt
 
and we run the script by typing
 
    $ bash myfile.txt
    
What happens? 

We can add formatting to make things look a little better. Type

    $ vi myfile.txt
   
and hit 'i' again to start editing. Go to your print line and add a \n (newline character) at the end of your statement, within the quotation marks

    printf "Hello World!\n"

again go to command mode, save and quit by typing

    <escape>
    :wq
  
Type

    $ bash myfile.txt
  
Does it look different? 

**In-class Assignment**

Write out the answers to these questions on a piece of paper and hand in before you leave. If you don't finish today you can finish at home and turn in the next class.

1. List all the organisms that are present in the 'genomes' directory. 
2. In one section of this tutorial you loaded blast+/2.3.0 and then blast+. Describe the output ASC gave you and what happened when you did this. 

